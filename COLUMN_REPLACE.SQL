/* PROCEDIMENTO QUE RECEBE UMA STRING, SCHEMA, TABELA E UMA COLUNA EM ESPECÍFICO CASO NECESSÁRIO, SE NÃO INFORMADO, ELE FARÁ EM TODOS OS CAMPOS DA TABELA
   UM REPLACE CONFORME PASSADO NA STRING.
   EXEMPLO DE STRING:'A=B;;','|A=;;|(INDICANDO QUE O RAPLACE É DE UM CARACTER PARA VAZIO)' OU 'A=B;;C=D;;E=F;;'. */

CREATE PROCEDURE DBO.STP_REPLACE (@STRING NVARCHAR(MAX), @SCHEMA NVARCHAR(MAX), @TABLE NVARCHAR(MAX), @WHERE NVARCHAR(MAX) = NULL, @COLUMN NVARCHAR(MAX) = NULL)

AS
BEGIN
BEGIN TRANSACTION;  
BEGIN TRY

SET NOCOUNT ON

/* VARIÁVEIS LOCAIS */
DECLARE @CONTADOR INTEGER
	   ,@CARACTEROLD NVARCHAR(MAX)
	   ,@CARACTERNEW NVARCHAR(MAX)
	   ,@QUERY NVARCHAR(MAX)
	   ,@STRINGORIG NVARCHAR(MAX) = @STRING 
	   ,@ERROR NVARCHAR(MAX)

SET @ERROR = N'O PARAMETRO STRING DEVE TER UM OU MAIS CARACTERES A SEREM SUBSTITUÍDOS SEPARADOS PELO SINAL DE |=| E DOIS SINAIS DE |;|
INDICANDO O TERMINO DAQUELE REPLACE, PODENDO TER MAIS DE UM REPLACE NA MESMA CHAMADA DO PROCEDIMENTO SEM ESPAÇOS.
EXEMPLO: |A=B;;|, |A=;;|(INDICANDO QUE O RAPLACE É DE UM CARACTER PARA VAZIO) OU |,=A;;@#$=BCD;;Ç=ABCD;;|'

PRINT '/* -------------------------------------------------------------------- */'
PRINT '/* PROCEDIMENTO DE REPLACE DE CARACTERES */'
PRINT '/* -------------------------------------------------------------------- */'
PRINT ''

-- CURSOR QUE GUARDA OS CAMPOS A SEREM ATUALIZADOS DA TABELA QUE PERMITEM ALGUM TIPO DE TEXTO
IF (@COLUMN IS NULL)
BEGIN

	DECLARE CR_COLUMN CURSOR SCROLL FOR
	SELECT TAB1.COLUMN_NAME
	  FROM INFORMATION_SCHEMA.COLUMNS TAB1
	 WHERE TAB1.TABLE_NAME = @TABLE
	   AND TAB1.TABLE_SCHEMA = @SCHEMA
	   AND TAB1.DATA_TYPE IN ('VARCHAR', 'NVARCHAR', 'TEXT')	
   
END
ELSE BEGIN

	DECLARE CR_COLUMN CURSOR SCROLL FOR
	SELECT TAB1.COLUMN_NAME
	  FROM INFORMATION_SCHEMA.COLUMNS TAB1
	 WHERE TAB1.TABLE_NAME = @TABLE
	   AND TAB1.TABLE_SCHEMA = @SCHEMA
       AND TAB1.COLUMN_NAME IN (@COLUMN)
	   
END   
	
 OPEN CR_COLUMN 
FETCH NEXT FROM CR_COLUMN
 INTO @COLUMN	 
	 
WHILE @@FETCH_STATUS = 0
BEGIN	

	PRINT 'EFETUANDO O REPLACE NO CAMPO |' + UPPER(@COLUMN) + '| DA TABELA ' + UPPER(@SCHEMA) + '.' + UPPER(@TABLE) + '...'
	PRINT ''

	IF (LEN(@STRING) != 0)
	BEGIN
	
		--VALIDAÇÃO DA STRING PARA QUE EM TODO CAMPO SEJA FEITO TODOS OS REPLACES CASO HAJA MAIS DE UM
		WHILE(LEN(@STRING) != 0)
		BEGIN	
		
			/* INICIANDO VARIÁVEIS */
			SET @CONTADOR = 1

			SET @CARACTEROLD = ''

			SET @CARACTERNEW = ''		
	
			--LEITURA DE CARACTER A CARACTER ATÉ QUE ENCONTRE O SINAL DE IGUAL
			WHILE(SUBSTRING(@STRING, @CONTADOR, 1) != '=')
			BEGIN	

				--INCREMENTA A VARIÁVEL CARACTER A CARACTER ATÉ ENCONTRAR O SINAL DE IGUAL
				SET @CARACTEROLD = @CARACTEROLD + SUBSTRING(@STRING, @CONTADOR, 1)

				SET @CONTADOR = @CONTADOR + 1

				--VALIDÃO DE ALGUM ERRO DE PASSAGEM DE PARAMETRO NA VARIÁVEL QUE RECEBE OS REPLACES	
				IF (@CONTADOR > LEN(@STRINGORIG))
				BEGIN
					
					EXEC SYS.SP_ADDMESSAGE  
						 @MSGNUM   = 60000  
						,@SEVERITY = 16  
						,@MSGTEXT  = ''
						,@LANG='US_ENGLISH';
						
						THROW 60000,'EXISTE UM ERRO NA PASSAGEM DO PARÂMETRO STRING. INFORME O |=| PARA INDICAR O CARACTER A SER SUBSTITUÍDO.',1;  
						ROLLBACK TRANSACTION;

				END	
			
			END

			SET @CONTADOR = @CONTADOR + 1

			--ATUALIZA A VARIAVEL SOMENTE COM O QUE VIER APÓS O SINAL DE IGUAL ENCONTRADO
			SET @STRING = SUBSTRING(@STRING, @CONTADOR, LEN(@STRING))

			SET @CONTADOR = 1				

			IF (SUBSTRING(@STRING, @CONTADOR, 2) != ';;')
			BEGIN			

				--VALIDAÇÃO CARACTER A CARACTER ATÉ ENCONTRAR OS PONTOS QUE DEFINEM O TERMINO DO REPLACE
				WHILE (SUBSTRING(@STRING, @CONTADOR, 2) != ';;')
				BEGIN
		
					--INCREMENTA A VARIÁVEL CARACTER A CARACTER ATÉ ENCONTRAR DOIS SINAIS DE ; SEQUÊNCIAIS
					SET @CARACTERNEW = @CARACTERNEW + SUBSTRING(@STRING, @CONTADOR, 1)

					SET @CONTADOR = @CONTADOR + 1

					--VALIDÃO DE ALGUM ERRO DE PASSAGEM DE PARAMETRO NA VARIÁVEL QUE RECEBE OS REPLACES	
					IF (@CONTADOR > LEN(@STRINGORIG))
					BEGIN
					
						EXEC SYS.SP_ADDMESSAGE  
								@MSGNUM   = 60000  
							,@SEVERITY = 16  
							,@MSGTEXT  = ''  
							,@LANG='US_ENGLISH';
						
							THROW 60000,'EXISTE UM ERRO NA PASSAGEM DO PARÂMETRO STRING. INFORME OS '';;'' NA SEPARAÇÃO DOS REPLACES.',1;  
							ROLLBACK TRANSACTION;

					END		

				END

			END
			ELSE BEGIN

				--INCREMENTA A VARIÁVEL CARACTER A CARACTER ATÉ ENCONTRAR DOIS SINAIS DE ; SEQUÊNCIAIS
				SET @CARACTERNEW = ''

				SET @CONTADOR = @CONTADOR + 1

				--VALIDÃO DE ALGUM ERRO DE PASSAGEM DE PARAMETRO NA VARIÁVEL QUE RECEBE OS REPLACES	
				IF (@CONTADOR > LEN(@STRINGORIG))
				BEGIN
					
					EXEC SYS.SP_ADDMESSAGE  
							@MSGNUM   = 60000  
						,@SEVERITY = 16  
						,@MSGTEXT  = ''  
						,@LANG='US_ENGLISH';
						
						THROW 60000,'EXISTE UM ERRO NA PASSAGEM DO PARÂMETRO STRING. INFORME OS '';;'' NA SEPARAÇÃO DOS REPLACES.',1;  
						ROLLBACK TRANSACTION;

				END			

			END		
			
			/*MONTAGEM DOS UPDATE*/
			SET @QUERY = N'UPDATE ' + @SCHEMA + '.' + @TABLE + '
								SET ' + @COLUMN + ' = REPLACE([' + @COLUMN + '], ''' + @CARACTEROLD + ''', ''' + @CARACTERNEW + ''')'			
		
			--VALIDAÇÃO DO PARAMETRO WHERE
			IF(@WHERE IS NOT NULL)
			BEGIN
		
				/*MONTAGEM DOS UPDATE COM WHERE*/
				SET @QUERY = @QUERY + ' WHERE ' + '' + @WHERE + ''
			
			END			
						  
			EXECUTE SP_EXECUTESQL @QUERY

			--CONFORME OS REPLACES VÃO SENDO MONTADOS, A VARIÁVEL É ATUALIZADA COM APENAS OS REPLACES QUE AINDA FALTAM
			SET @STRING = SUBSTRING(@STRING, 3, LEN(@STRING))			

		END

	END
	ELSE BEGIN

		--CASO SEJA DETECTADO ERRO DE PASSAGEM DE PARAMETRO NA VARIAVEL @STRING
				EXEC SYS.SP_ADDMESSAGE  
						 @MSGNUM  = 60000  
						,@SEVERITY = 16  
						,@MSGTEXT  = ''
						,@LANG='US_ENGLISH';
						
						THROW 60000, @ERROR ,1;  
						ROLLBACK TRANSACTION;

	END
	
	SET @STRING = @STRINGORIG	
	
	/* ATUALIZA OS ESPAÇOS EM BRANCO */
	SET @QUERY = N'UPDATE ' + @SCHEMA + '.' + @TABLE + '
					  SET ' + @COLUMN + ' = LTRIM(' + @COLUMN + ')'

	EXECUTE SP_EXECUTESQL @QUERY
	
	/* ATUALIZA OS ESPAÇOS EM BRANCO */
	SET @QUERY = N'UPDATE ' + @SCHEMA + '.' + @TABLE + '
					  SET ' + @COLUMN + ' = RTRIM(' + @COLUMN + ')'

	EXECUTE SP_EXECUTESQL @QUERY

	/* ATUALIZA OS CAMPOS VAZIOS PARA NULOS */
	SET @QUERY = N'UPDATE ' + @SCHEMA + '.' + @TABLE + '
					  SET ' + @COLUMN + ' = NULL
					WHERE ' + @COLUMN + ' = '''''	

	EXECUTE SP_EXECUTESQL @QUERY
	
	FETCH NEXT FROM CR_COLUMN
	 INTO @COLUMN

END	 

CLOSE CR_COLUMN
DEALLOCATE CR_COLUMN

PRINT '/* --------------------------------------------------------------------------------- */'
PRINT '/* TODOS OS CAMPOS TEXTOS DA TABELA ' + @SCHEMA + '.' + @TABLE + ' FORAM ATUALIZADOS */'
PRINT '/* --------------------------------------------------------------------------------- */'
PRINT ''

END TRY 
 BEGIN CATCH     
  SELECT ERROR_MESSAGE() AS ERRORMESSAGE;     

  IF @@TRANCOUNT > 0         
   ROLLBACK TRANSACTION; 

   CLOSE CR_COLUMN
   DEALLOCATE CR_COLUMN

 END CATCH;

 IF @@TRANCOUNT > 0
  COMMIT TRANSACTION;
END
