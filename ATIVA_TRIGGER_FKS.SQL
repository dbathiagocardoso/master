BEGIN

DECLARE @FK NVARCHAR(MAX)
DECLARE @CHECK NVARCHAR(MAX)
DECLARE @TABELA NVARCHAR(MAX)
DECLARE @SCHEMA NVARCHAR(MAX)
DECLARE @CONSTFK NVARCHAR(MAX)
DECLARE @CHECKFK NVARCHAR(MAX)
DECLARE @PRINT NVARCHAR(MAX)
DECLARE @CONTADOR INTEGER

SET NOCOUNT ON

/* VERIFICA SE HÁ TRIGGERS DESABILITADAS DA BASE */

IF EXISTS (SELECT 1 FROM SYS.TRIGGERS WHERE IS_DISABLED = 1)
BEGIN
	
	PRINT 'HABILITANDO TODAS AS TRIGGERS...'
	PRINT ''
	
	EXECUTE SP_EXECUTESQL N'SP_MSFOREACHTABLE "ALTER TABLE ? ENABLE TRIGGER ALL"'
	
	PRINT 'TRIGGERS HABILITADAS!'
	PRINT ''

END
ELSE BEGIN

	PRINT 'TRIGGERS HABILITADAS!'
	PRINT ''
	
END

/* SELECIONA TODAS AS CONSTRAINTS DESABILITADAS DA BASE */

-- DECLARAÇÃO DO CURSOR QUE IRÁ PERCORRER AS CONSTRAINTS DESATIVADAS DENTRO DA BASE
DECLARE CR_FKDISABLE CURSOR SCROLL FOR
SELECT UPPER(OBJ.NAME) AS NOME_FK 
	  ,UPPER(SCH.NAME) AS ESQUEMA   
	  ,UPPER(TAB1.NAME) AS TABELA
  FROM SYS.FOREIGN_KEY_COLUMNS FKC 
  JOIN SYS.OBJECTS OBJ ON (OBJ.OBJECT_ID  = FKC.CONSTRAINT_OBJECT_ID) 
  JOIN SYS.TABLES TAB1 ON (TAB1.OBJECT_ID = FKC.PARENT_OBJECT_ID) 
  JOIN SYS.SCHEMAS SCH ON (TAB1.SCHEMA_ID = SCH.SCHEMA_ID) 
  JOIN SYS.COLUMNS COL1 ON (COL1.COLUMN_ID = PARENT_COLUMN_ID AND COL1.OBJECT_ID = TAB1.OBJECT_ID) 
  JOIN SYS.TABLES TAB2 ON (TAB2.OBJECT_ID = FKC.REFERENCED_OBJECT_ID) 
  JOIN SYS.COLUMNS COL2 ON (COL2.COLUMN_ID = REFERENCED_COLUMN_ID AND COL2.OBJECT_ID =  TAB2.OBJECT_ID) 
  JOIN SYS.SYSFOREIGNKEYS SIT ON (SIT.CONSTID = FKC.CONSTRAINT_OBJECT_ID) 
 WHERE OBJECTPROPERTY(CONSTID,('CNSTISDISABLED')) <> 0

-- INICIA O CURSOR 
 OPEN CR_FKDISABLE; 
FETCH NEXT FROM CR_FKDISABLE 
 INTO @FK, @SCHEMA, @TABELA

WHILE @@FETCH_STATUS = 0
BEGIN	

	-- TRATAMENTO DE EXCESSÃO 
	BEGIN TRY

		SET @CONSTFK = N'ALTER TABLE [' + @SCHEMA + '].[' + @TABELA + '] WITH CHECK CHECK CONSTRAINT ' + @FK +''

		EXECUTE SP_EXECUTESQL @CONSTFK 
		
		-- INCREMENTA O CURSOR
		FETCH NEXT FROM CR_FKDISABLE
		INTO @FK, @SCHEMA, @TABELA  
	
	END TRY
	BEGIN CATCH 

		-- INCREMENTA O CURSOR
		FETCH NEXT FROM CR_FKDISABLE
		INTO @FK, @SCHEMA, @TABELA

	END CATCH
END

-- FECHA E DESALOCA O CURSOR
CLOSE CR_FKDISABLE
DEALLOCATE CR_FKDISABLE

/* SELECIONA TODAS AS CHECKS DESABILITADAS DA BASE */

-- DECLARAÇÃO DO CURSOR QUE IRÁ PERCORRER AS FKS DESATIVADAS DENTRO DA BASE
DECLARE CR_CHECKDISABLE CURSOR SCROLL FOR
 SELECT UPPER(TAB1.NAME) AS NOME_FK
       ,UPPER(TAB2.NAME) AS ESQUEMA
	   ,UPPER(OBJECT_NAME(PARENT_OBJECT_ID)) AS TABELA
   FROM SYS.CHECK_CONSTRAINTS TAB1
   JOIN SYS.SCHEMAS TAB2 ON TAB2.SCHEMA_ID = TAB1.SCHEMA_ID
  WHERE IS_DISABLED = 1

  
-- INICIA O CURSOR 
 OPEN CR_CHECKDISABLE; 
FETCH NEXT FROM CR_CHECKDISABLE 
 INTO @CHECK, @SCHEMA, @TABELA

WHILE @@FETCH_STATUS = 0
BEGIN	

	-- TRATAMENTO DE EXCESSÃO 
	BEGIN TRY  

		SET @CHECKFK = N'ALTER TABLE ' + @SCHEMA + '.' + @TABELA + ' WITH CHECK CHECK CONSTRAINT ' + @CHECK +''

		EXECUTE SP_EXECUTESQL @CHECKFK  

		-- INCREMENTA O CURSOR
		FETCH NEXT FROM CR_CHECKDISABLE
		INTO @CHECK, @SCHEMA, @TABELA
	
	END TRY
	BEGIN CATCH 

		-- INCREMENTA O CURSOR
		FETCH NEXT FROM CR_CHECKDISABLE
		INTO @CHECK, @SCHEMA, @TABELA

	END CATCH
END

CLOSE CR_CHECKDISABLE
DEALLOCATE CR_CHECKDISABLE

-- VERIFICA SE EXISTE CONSTRAINTS DESABILITADAS
IF (SELECT COUNT(OBJECT_NAME(CONSTID))
      FROM SYSFOREIGNKEYS
     WHERE OBJECTPROPERTY(CONSTID, 'CNSTISDISABLED') = 1) = 0

	BEGIN

		-- PRINT
		PRINT '-> TODAS AS CONSTRAINTS FORAM ATIVADAS!'	
		PRINT ''

	END
	ELSE BEGIN

		-- SELECIONA TODAS AS CONSTRAINTS DESABILITADAS
		SELECT UPPER(OBJ.NAME) AS NOME_FK 
			  ,UPPER(SCH.NAME) AS ESQUEMA   
			  ,(CASE WHEN OBJECTPROPERTY(CONSTID,('CNSTISDISABLED')) = 0 THEN 'ENABLED'  ELSE 'DISABLED' END) AS STATUS
			  ,UPPER(TAB1.NAME) AS TABELA
			  ,UPPER(COL1.NAME) AS COLUNA    
			  ,UPPER(TAB2.NAME) AS TABELA_REFERENCIADA 
			  ,UPPER(COL2.NAME) AS COLUNA_REFERENCIADA 
		  FROM SYS.FOREIGN_KEY_COLUMNS FKC 
		  JOIN SYS.OBJECTS OBJ ON (OBJ.OBJECT_ID  = FKC.CONSTRAINT_OBJECT_ID) 
		  JOIN SYS.TABLES TAB1 ON (TAB1.OBJECT_ID = FKC.PARENT_OBJECT_ID) 
		  JOIN SYS.SCHEMAS SCH ON (TAB1.SCHEMA_ID = SCH.SCHEMA_ID) 
		  JOIN SYS.COLUMNS COL1 ON (COL1.COLUMN_ID = PARENT_COLUMN_ID AND COL1.OBJECT_ID = TAB1.OBJECT_ID) 
		  JOIN SYS.TABLES TAB2 ON (TAB2.OBJECT_ID = FKC.REFERENCED_OBJECT_ID) 
		  JOIN SYS.COLUMNS COL2 ON (COL2.COLUMN_ID = REFERENCED_COLUMN_ID AND COL2.OBJECT_ID =  TAB2.OBJECT_ID) 
		  JOIN SYS.SYSFOREIGNKEYS SIT ON (SIT.CONSTID = FKC.CONSTRAINT_OBJECT_ID) 
		 WHERE OBJECTPROPERTY(CONSTID,('CNSTISDISABLED')) <> 0

	END

	-- VERIFICA SE EXISTE CHECKS CONSTRAINTS DESABILITADAS
	IF (SELECT COUNT(*)
		  FROM SYS.CHECK_CONSTRAINTS
		 WHERE IS_DISABLED = 1) = 0

	BEGIN
	
		-- PRINT
		PRINT '-> TODAS AS CHECKS CONSTRAINTS FORAM ATIVADAS!'	
		PRINT ''
	
	END
	ELSE BEGIN
	
		SELECT UPPER(TAB1.NAME) AS NOME_CHECK
			  ,UPPER(TAB2.NAME) AS ESQUEMA
			  ,(CASE WHEN TAB1.IS_DISABLED = 1 THEN 'ENABLE' ELSE 'DISABLE' END) AS STATUS
			  ,UPPER(OBJECT_NAME(PARENT_OBJECT_ID)) AS TABELA
		  FROM SYS.CHECK_CONSTRAINTS TAB1
		  JOIN SYS.SCHEMAS TAB2 ON TAB2.SCHEMA_ID = TAB1.SCHEMA_ID
	     WHERE TAB1.IS_DISABLED = 1

	END	
END
	
	
	
	
	
	
	
